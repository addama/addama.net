<!DOCTYPE html>
<html>
	<head>
		<title>Agile, Scrum, Lean - What's it all mean? | addama.net</title>
		<link rel='stylesheet' href='./style.css' />
	</head>
	<body>
		<div id='main'>
			<header>
				<h1>Agile, Scrum, Lean - What's it all mean?</h1>
				<p>Figuring shit out and explaining it in small words for people who have heard the big words and can't be bothered to look it up themselves</p>
				<nav>
					<ul>
						<li>Scrum</li>
						<li>Agile</li>
						<li>Lean</li>
						<li>etc</li>
					</ul>
				</nav>
			</header>

			<section>
				<h2><a id='agile'></a>Agile</h2>
				<p>Agile is an abstract mindset that is minimalistic and progressive, focusing on letting people do the work you hired them to do without interference, and delivering a solid final product rather than worrying about the beaurocracy along the way. Agile is not a process or an organizational fixture, but is instead a way of thinking analogous to a mission statement or company motto.</p>
				<p>Concepts in Agile include: frequent, smaller releases of products and additions, regular reflection on performance and active planning to address any failures, and allowing the employees to have an environment in which they can use their skills and ideas to their fullest. In general, an Agile organization will trust their workers' abilities to get the work done, and will have a more hands-off approach to process. This means less meetings, less documentation, less process, and less time and money spent making those things happen. All of this is in response to the older, more rigid way of doing things that attempts to micromanage all facets of development, overburdening hardworking people with non-work tasks and expectations. Whereas the old way was rigid, Agile is... agile.</p>
				<p>Naturally as Agile is just a mindset, you will probably want to follow a particular implementation of it, usually called a framework. Agile frameworks take the principles and mindset of Agile and codify it into a practical and enforceable process. Popular Agile frameworks include <a href='#scrum'>Scrum</a>, XP, and Kanban.</p>
			</section>

			<section>
				<h2><a id='lean'></a>Lean</h2>
				<p>Like <a href='#agile'>Agile</a>, Lean is an abstract mindset analogous to a mission statement or company goals. In general, Lean and Agile go hand-in-hand, although it takes concerted effort to live up to the standards of both. Lean focuses on a mindset that enables process improvement and forward momentum, as well as removing anything (people, process, meetings, documentation, etc) that does not directly increase the value of the final product or the "value streams" that final product flows through. As a Lean organization, you are encouraged to establish metrics of performance, then conduct experiments in an attempt to improve those metrics, thereby creating a newer, better standard. These experiments should be bold and immediate, because even if the experiment fails, the lessons learned from it are more valuable than stagnating or being too afraid to change. This drive for change is applied at all levels, and to all metrics, not just workers and the products they produce. Anything can be improved.</p>
				<p>Lean can be a tall order to fully live up to, as it demands introspection and change at all levels, but there are quite a few supporting organizations to assist in introducing the Lean mindset to your business and creating a plan for your first steps.</p>
			</section>

			<section>
				<h2><a id='agile-lean'></a>Agile-Lean Relationship</h2>
				<p><a href='#agile'>Agile</a> and <a href='#lean'>Lean</a> are often taken together to create a larger, more comprehensive vision for your company mindset. Agile focuses more on the day to day expectations concerning delivery of products and how workers are treated, while Lean focuses on trimming the fat and continuously seeking self-improvement. Both of these ways of thinking have the goal of increasing value of your process and the final product you create.</p>
				<p>A Lean organization might adopt an Agile framework if your existing process is found to be inefficient and an experiment in improving those metrics puts, for example, <a href='#scrum'>Scrum</a> in its place.</p>
				<p>An Agile organization might adopt Lean thinking because Agile already asks us to seek continuous improvement, and Lean provides a rigorous method for seeking and implementing that improvement.</p>
			</section>

			<section>
				<h2><a id='scrum'></a>Scrum</h2>
				<p>Scrum is an <a href='#agile'>Agile</a> framework that upholds Agile principles and predefines a handful of usually contentious things when deciding how to do your work - namely roles, meetings, and artifacts or documents, as well as a few other key concepts. Scrum is a minimalist approach to process, and focuses on letting people do their jobs with minimal interruption while delivering work in short, stable cycles of effort. Meetings are few and have mandatory time limits and frequencies. Recognized roles are few but well-defined. The end result is fewer people doing more work in a shorter amount of time because they are releasing products quicker, spending less times in meetings, and spending less time creating extraneous documentation and side-processes.</p>
				<p>As a Scrum organization, your "project manager" doesn't exist, and is instead split into two dedicated roles: The Product Owner, and the Scrum Master. The Product Owner does what it says on the tin, for the most part - they know everything about the product, what work is needed now and in the future, as well as serving as the single point of contact for that product, its clients, and the development team. The Scrum Master, again, is fairly self-descriptive. Since Scrum hard-defines how things work, the Scrum Master's job is to facilitate the required meetings, teach new (and old!) employees about how Scrum works, advise and support Product Owners and the Development Team in decisions, and removing roadblocks whenever they can. These two roles are combined with a Development Team to make the Scrum Team. The Development Team is a microcosm of all the work needed to put out an iteration of your product; that is, each Development Team needs programmers, testers, QA, database, deployment, etc. The Scrum Team works together as a discrete unit to iteratively deliver products and product updates.</p>
				<p><strong>Associated terms:</strong>
					<ul>
						<li>Sprint</li>
						<li>Scrum Master</li>
						<li>Product Owner</li>
						<li>Artifacts</li>
						<li>Rituals (i.e. meetings)</li>
						<li>Timebox</li>
					</ul>
				</p>
			</section>

			<section>
				<h2>SAFe (Scaled Agile Framework)</h2>
				<p></p>
			</section>

			<section>
				<h2>Kanban</h2>
				<p></p>
			</section>

			<section>
				<h2>Scrumban</h2>
				<p></p>
			</section>
		</div>
	</body>
</html>
